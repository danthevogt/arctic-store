{"version":3,"sources":["context.js","Top.js","Left.js","Right.js","Bottom.js","Receipt.js","About.js","product-card.js","Home.js","Help.js","Details.js","util.js","Cart.js","checkout-starter.js","App.js","context-provider.js","serviceWorker.js","index.js"],"names":["AppContext","React","createContext","Top","context","useContext","Navbar","expand","to","Brand","alt","src","width","Toggle","aria-controls","Collapse","id","Nav","className","cartCount","NavDropdown","title","Item","Divider","Left","props","categories","counts","totalCount","Object","values","products","product","category","defaultActiveKey","ButtonGroup","vertical","map","cat","key","Right","Bottom","align","Receipt","About","ProductCard","shortDescription","description","substring","price","parseInt","toFixed","Card","bg","style","Img","variant","filename","Body","Title","name","Text","Home","match","useRouteMatch","filter","params","lstProducts","Col","toString","md","Container","fluid","Row","Help","Details","useState","hidden","setHidden","p","url","height","onMouseEnter","onClick","addToCart","formatNumber","num","parseFloat","replace","Cart","CartTable","role","data","total","entries","cart","pid","qty","push","borderless","row","extended","size","e","removeFromCart","stripePromise","loadStripe","Checkout","stripe","CheckoutController","history","useHistory","useStripe","elements","useElements","getCartTotal","stripeError","setStripeError","initialValues","address1","address2","city","state","zipcode","validateOnChange","validateOnBlur","validate","console","log","onSubmit","actions","a","items","axios","post","resp","confirmCardPayment","client_secret","payment_method","card","getElement","CardElement","billing_details","stripeResp","setSubmitting","error","message","clearCart","form","PaymentForm","Header","type","disabled","isSubmitting","animation","Input","rProps","Group","Label","Control","placeholder","field","meta","touched","App","xs","path","component","AppProvider","setState","produce","draft","count","Provider","value","this","get","cat_resp","prod_resp","prod","Component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.116b5b1d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst AppContext = React.createContext()\r\nexport default AppContext","import React, { useContext } from 'react';\r\nimport { Navbar } from 'react-bootstrap';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { NavDropdown } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport './App.scss';\r\nimport AppContext from './context';\r\n\r\n\r\n\r\n\r\nexport default function Top() {\r\n\r\n  const context = useContext(AppContext)\r\n\r\n  return (\r\n    <Navbar expand=\"lg\">\r\n        <Link to=\"/\">\r\n            <Navbar.Brand>\r\n                <img alt=\"Site Icon\" src=\"\\lab-logo.PNG\" width=\"30px\" /> Arctic\r\n            </Navbar.Brand>\r\n        </Link>\r\n    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n      <Nav className=\"mr-auto\">\r\n        <Link to=\"/\" className=\"nav-link\">Home</Link>\r\n        <Link to=\"/about\" className=\"nav-link\">About</Link>\r\n        <Link to=\"/help\" className=\"nav-link\">Help</Link>\r\n      </Nav>\r\n      <Nav>      \r\n        <Link to=\"/cart\" className=\"nav-link\"><i className=\"fas fa-shopping-cart\"> ({context.cartCount})</i></Link>\r\n        <NavDropdown title=\"Welcome, Daniel\" id=\"collasible-nav-dropdown\">\r\n          <NavDropdown.Item>My Account</NavDropdown.Item>\r\n          <NavDropdown.Divider />\r\n          <NavDropdown.Item>Logout</NavDropdown.Item>\r\n        </NavDropdown>\r\n    </Nav>\r\n    </Navbar.Collapse>\r\n  </Navbar>\r\n    )\r\n}","import React from 'react';\r\nimport { Nav } from 'react-bootstrap';\r\nimport './App.scss';\r\nimport {Link} from \"react-router-dom\";\r\nimport { ButtonGroup } from 'react-bootstrap'\r\nimport AppContext from './context';\r\n\r\nfunction Left(props) {\r\n  const context = React.useContext(AppContext)\r\n\r\n  // if categories haven't been retrieved yet, just show a loading message\r\n  if (!context.categories) {\r\n      return <div>Loading...</div>\r\n  }\r\n\r\n  // count the number of products in each category\r\n  const counts = {}\r\n  let totalCount = 0\r\n  for (const product of Object.values(context.products)) {\r\n      counts[product.category.id] = (counts[product.category.id] || 0) + 1\r\n      totalCount += 1\r\n  }\r\n  // console.log(counts)\r\n\r\n  // render the categories\r\n\r\n    return (\r\n      <>\r\n          <Nav defaultActiveKey=\"/home\" className=\"flex-column\">\r\n            <ButtonGroup className=\"my-4\" vertical>\r\n              <Link className=\"btn btn-secondary\" to=\"/\">Everything ({totalCount})</Link>\r\n              {Object.values(context.categories).map((cat) =>\r\n                <Link className=\"btn btn-secondary\" to={\"/category/\" + cat.title} key={cat.id}>{cat.title} ({counts[cat.id]}) </Link>\r\n              )}\r\n              {/* {lstCategories} */}\r\n            </ButtonGroup>\r\n          </Nav>\r\n      </>\r\n    )\r\n}\r\nexport default Left\r\n","import React from 'react';\r\nimport './App.scss';\r\n\r\nexport default function Right() {\r\n  return (\r\n    <>\r\n      <h2>Recent:</h2>\r\n    </>  \r\n  )\r\n}","import React from 'react';\r\nimport './App.scss';\r\n\r\nexport default function Bottom() {\r\n  return (\r\n        <footer align=\"center\">&copy; 2020 Northwest Labs</footer>\r\n  )\r\n}","import React from 'react';\r\nimport './App.scss';\r\n\r\nexport default function Receipt() {\r\n  return (\r\n    <>\r\n        <h2>Thank you, your order has been received!</h2>\r\n    </>\r\n  )\r\n}","import React from 'react';\r\nimport './App.scss';\r\n\r\nexport default function About() {\r\n  return (\r\n\r\n        <>\r\n          <div>\r\n            <h2>Hello</h2>\r\n            <h3>How are you?</h3>\r\n          </div>        \r\n        </>\r\n  )\r\n}","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card } from 'react-bootstrap';\r\n\r\n\r\n\r\nexport default function ProductCard(props) {\r\n\r\n    let shortDescription = props.product.description.substring(0,50) \r\n    \r\n    let price = parseInt(props.product.price).toFixed(2)\r\n\r\n    return (\r\n\r\n        \r\n        <>\r\n            <Card bg=\"light\" style={{ width: '18rem' }}>\r\n                <Card.Img variant=\"top\" src={`/media/images/${props.product.filename}-1.png`}  />\r\n                <Card.Body>\r\n                    <Card.Title>{props.product.name}</Card.Title>\r\n                    <Card.Text >Price: ${price}</Card.Text>\r\n                    <Card.Text>{shortDescription + \"...\"}</Card.Text>\r\n                    <Link to={`/product/${props.product.id}`} className=\"btn btn-primary abs\" variant=\"primary\">Details</Link>\r\n                </Card.Body>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { Row } from 'react-bootstrap';\r\nimport { Container } from 'react-bootstrap';\r\nimport { Col } from 'react-bootstrap';\r\nimport './App.scss';\r\nimport ProductCard from './product-card';\r\nimport {useRouteMatch} from 'react-router-dom'\r\nimport AppContext from './context'\r\n\r\n// const NUM_COLUMNS = 4 \r\n\r\nexport default function Home(props) {\r\n\r\n  \r\n  const context = useContext(AppContext)\r\n  let products = Object.values(context.products)\r\n\r\n  // let PRODUCTS_ARRAY = Object.values(PRODUCTS)\r\n\r\n  const match = useRouteMatch(\"/category/:id\")\r\n\r\n  if (match) {\r\n    products = products.filter(product => {\r\n      return (\r\n        product.category.title === match.params.id\r\n        \r\n      )\r\n    }) \r\n  }\r\n\r\n\r\n  const lstProducts = products.map(product => (          \r\n    <Col key={product.name.toString()} md=\"3\" className=\"my-3\">\r\n        <ProductCard product={product} />\r\n    </Col>          \r\n  ))\r\n\r\n  // const rows = []\r\n  // for (let i = 0; i < PRODUCTS_ARRAY.length; i += NUM_COLUMNS) {\r\n  //   rows.push(PRODUCTS_ARRAY.slice(i, i + NUM_COLUMNS))\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <Container fluid>\r\n        <Row md=\"3\">\r\n          {lstProducts}\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  )\r\n}","import React from 'react';\r\nimport './App.scss';\r\n\r\nexport default function Help() {\r\n  return (\r\n        <div>\r\n          <h2>Help</h2>\r\n          <h3>How may I help you today?</h3>\r\n        </div>\r\n  )\r\n}","import React, {useState, useContext} from 'react'\r\nimport { useRouteMatch } from 'react-router'\r\nimport AppContext from './context'\r\nimport { Link } from \"react-router-dom\"\r\n// import { useHistory } from \"react-router-dom\"\r\n\r\n\r\n\r\nexport default function Details(props) {\r\n\r\n    //Use Route Match\r\n    const match = useRouteMatch(\"/product/:id\")\r\n\r\n   \r\n  \r\n  const context = useContext(AppContext)\r\n  \r\n  let products = Object.values(context.products)   \r\n\r\n    let [hidden, setHidden] = useState(\"-1\")\r\n\r\n    const p = products[match.params.id - 1]\r\n\r\n\r\n    // let history = useHistory();\r\n\r\n    // function handleClick() {\r\n    //   history.push(\"/cart\");\r\n    // }\r\n\r\n\r\n\r\n    if (p == null){\r\n        return (\r\n            <>\r\n                <h2>Product \"{match.url}\" Not Found</h2>\r\n            </>\r\n        )\r\n    }\r\n\r\n    else {\r\n        \r\n        let price = parseInt(p.price).toFixed(2)\r\n\r\n        \r\n\r\n        return (\r\n            <>\r\n                <div className=\"float-rt\">\r\n                    <img width=\"300px\" height=\"300px\" alt=\"\" src={`/media/images/${p.filename}${hidden}.png`} />    \r\n                        <div align=\"center\">\r\n                            <img onMouseEnter={() => setHidden(\"-1\")} className=\"thumbnail\" alt=\"\" src={`/media/images/${p.filename}-1.png`} />\r\n                            <img onMouseEnter={() => setHidden(\"-2\")} className=\"thumbnail\" alt=\"\" src={`/media/images/${p.filename}-2.png`} />\r\n                            <img onMouseEnter={() => setHidden(\"-3\")} className=\"thumbnail\" alt=\"\" src={`/media/images/${p.filename}-3.png`} />\r\n                            <img onMouseEnter={() => setHidden(\"-4\")} className=\"thumbnail\" alt=\"\" src={`/media/images/${p.filename}-4.png`} />\r\n                        </div>\r\n                </div>\r\n                <div>\r\n                    <h1>{p.name}</h1>\r\n                    <h2>${price}</h2>\r\n                    <h4>{p.description}</h4>\r\n                </div><br />\r\n\r\n                <Link to=\"/cart\" onClick={() => {context.addToCart(p.id)}} className=\"btn btn-warning\">Add to Cart</Link><br /><br />\r\n            </>\r\n        )\r\n    }\r\n}","\r\n\r\nexport function formatNumber(num) {\r\n    return parseFloat(num).toFixed(2).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\r\n}\r\n","import React from 'react';\r\nimport './App.scss'\r\nimport AppContext from './context';\r\nimport { Link } from 'react-router-dom'\r\nimport * as bs from 'react-bootstrap'\r\nimport { formatNumber } from './util'\r\n\r\nfunction Cart(props) {\r\n  return (\r\n      <bs.Container fluid>\r\n          <bs.Row>\r\n              <bs.Col>\r\n                  <h1 className=\"mt-3\">\r\n                      Shopping Cart\r\n                  </h1>\r\n              </bs.Col>\r\n          </bs.Row>\r\n          <bs.Row>\r\n              <bs.Col>\r\n                  <CartTable />\r\n              </bs.Col>\r\n          </bs.Row>\r\n          <bs.Row>\r\n              <bs.Col className=\"text-center\">\r\n                  <Link to=\"/checkout\" className=\"btn btn-success\" role=\"button\">\r\n                      Checkout\r\n                  </Link>\r\n              </bs.Col>\r\n          </bs.Row>\r\n      </bs.Container>\r\n  )\r\n}\r\nexport default Cart\r\n\r\n\r\n\r\n/** The table of items in the cart */\r\nfunction CartTable(props) {\r\n  const context = React.useContext(AppContext)\r\n\r\n  // create the table data (doing before render because easier here)\r\n  const data = []\r\n  let total = 0\r\n  for (const [pid, qty] of Object.entries(context.cart)) {\r\n      const product = context.products[pid]\r\n      if (product) {  // might be undefined if products not loaded from API yet\r\n          total += (qty * product.price)\r\n          data.push({\r\n              'product': product,\r\n              'qty': qty,\r\n              'extended': qty * product.price,\r\n          })\r\n      }\r\n  }\r\n\r\n  return (\r\n      <bs.Table borderless className=\"mt-4\">\r\n          <tbody>\r\n              <tr className=\"border-bottom\">\r\n                  <th className=\"text-center\">Product</th>\r\n                  <th className=\"text-center\">Quantity</th>\r\n                  <th className=\"text-center\">Price</th>\r\n                  <th className=\"text-center\">Extended</th>\r\n                  <th></th>\r\n              </tr>\r\n              {data.map(row => (\r\n                  <tr key={row.product.id}>\r\n                      <td>\r\n                          <img\r\n                              alt={row.product.name}\r\n                              src={`/media/images/${row.product.filename}-1.png`}\r\n                              className=\"border rounded mr-3\"\r\n                              style={{\r\n                                  height: \"60px\",\r\n                                  width: \"60px\",\r\n                              }}\r\n                          />\r\n                          {row.product.name}\r\n                      </td>\r\n                      <td className=\"text-right\">{row.qty}</td>\r\n                      <td className=\"text-right\">{formatNumber(row.product.price)}</td>\r\n                      <td className=\"text-right\">{formatNumber(row.extended)}</td>\r\n                      <td className=\"text-center\">\r\n                          <bs.Button\r\n                              variant=\"outline-secondary\"\r\n                              size=\"sm\"\r\n                              onClick={e => {\r\n                                  context.removeFromCart(row.product.id)\r\n                              }}\r\n                          >\r\n                              Remove\r\n                          </bs.Button>\r\n                      </td>\r\n                  </tr>\r\n              ))}\r\n              <tr className=\"border-top\">\r\n                  <th className=\"text-center\">Total</th>\r\n                  <th></th>\r\n                  <th></th>\r\n                  <th className=\"text-right\">{formatNumber(total)}</th>\r\n                  <th></th>\r\n              </tr>\r\n          </tbody>\r\n      </bs.Table>\r\n  )\r\n}","import React from 'react'\r\nimport * as bs from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport { Formik, Form, Field} from 'formik'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { formatNumber } from './util'\r\nimport AppContext from './context'\r\n\r\nconst stripePromise = loadStripe(\"pk_test_iCL91JIyb5YKwhitxEyOfKzc00TXiGqpdE\")\r\n\r\n\r\nfunction Checkout(props) {\r\n    return (\r\n        <Elements stripe={stripePromise}>\r\n            <CheckoutController />\r\n        </Elements>\r\n    )\r\n}\r\nexport default Checkout\r\n\r\n\r\nconst CheckoutController = props => {\r\n    const context = React.useContext(AppContext)\r\n    const history = useHistory()\r\n    const stripe = useStripe()\r\n    const elements = useElements()\r\n    const total = context.getCartTotal()\r\n    const [stripeError, setStripeError] = React.useState(null)\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                name: 'Conrad Fox',\r\n                address1: '1234',\r\n                address2: '5678',\r\n                city: 'Provo',\r\n                state: 'UT',\r\n                zipcode: '84602',\r\n            }}\r\n            validateOnChange={false}\r\n            validateOnBlur={false}\r\n            validate={values => {\r\n\r\n                if (!values.name) {\r\n                    \r\n                }\r\n\r\n                console.log('validating', values)\r\n                return {}\r\n            }}\r\n            onSubmit={async (values, actions) => {\r\n                console.log('submit', values)\r\n                setStripeError(null)\r\n\r\n                // create the sale\r\n                const items = []\r\n                for (const [pid, qty] of Object.entries(context.cart)) {\r\n                    const product = context.products[pid]\r\n                    if (product) {\r\n                        items.push({\r\n                            pid: pid,\r\n                            qty: qty,\r\n                            price: product.price,\r\n                        })\r\n                    }\r\n                }\r\n                const resp = await axios.post('http://localhost:8000/api/sale/', {\r\n                    name: values.name,\r\n                    address1: values.address1,\r\n                    address2: values.address2,\r\n                    city: values.city,\r\n                    state: values.state,\r\n                    zipcode: values.zipcode,\r\n                    total: total,\r\n                    items: items,\r\n                })\r\n                console.log(resp.data)\r\n\r\n                // submit the details to stripe\r\n                const stripeResp = await stripe.confirmCardPayment(resp.data.client_secret, {\r\n                    payment_method: {\r\n                        card: elements.getElement(CardElement),\r\n                        billing_details: {\r\n                            name: values.name,\r\n                        },\r\n                    }\r\n                })\r\n                console.log(stripeResp)\r\n                actions.setSubmitting(false)\r\n                if (stripeResp.error) {\r\n                    setStripeError(stripeResp.error.message)\r\n                    return\r\n                }\r\n\r\n                // clear the cart and forward on\r\n                context.clearCart()\r\n                history.push('/receipt')\r\n            }}\r\n        >{form => (\r\n            <>\r\n                {stripeError &&\r\n                    <div className=\"mb-3 text-center text-danger\">{stripeError}</div>\r\n                }\r\n                <PaymentForm form={form} total={total} />\r\n            </>\r\n        )}</Formik>\r\n    )\r\n}\r\n\r\n\r\n/**\r\n * The form layout/html.\r\n */\r\nconst PaymentForm = props => (\r\n    <Form>\r\n        <bs.Container fluid>\r\n            <bs.Row>\r\n                <bs.Col>\r\n                    <h1 className=\"mt-3\">Checkout</h1>\r\n                </bs.Col>\r\n            </bs.Row>\r\n            <bs.Row className=\"my-3\">\r\n                <bs.Col md=\"6\">\r\n                    <bs.Card>\r\n                        <bs.Card.Header>\r\n                            <bs.Card.Title>Shipping</bs.Card.Title>\r\n                        </bs.Card.Header>\r\n                        <bs.Card.Body>\r\n                            <Input title=\"Name:\" name=\"name\" type=\"text\" />\r\n                            <Input title=\"Address1:\" name=\"address1\" type=\"text\" />\r\n                            <Input title=\"Address2:\" name=\"address2\" type=\"text\" />\r\n                            <Input title=\"City:\" name=\"city\" type=\"text\" />\r\n                            <Input title=\"State:\" name=\"state\" type=\"text\" />\r\n                            <Input title=\"Zip:\" name=\"zipcode\" type=\"text\" />\r\n                        </bs.Card.Body>\r\n                    </bs.Card>\r\n                </bs.Col>\r\n                <bs.Col md=\"6\">\r\n                    <bs.Card>\r\n                        <bs.Card.Header>\r\n                            <bs.Card.Title>Payment</bs.Card.Title>\r\n                        </bs.Card.Header>\r\n                        <bs.Card.Body>\r\n                            <CardElement />\r\n                        </bs.Card.Body>\r\n                    </bs.Card>\r\n\r\n                    <div className=\"mt-4\">\r\n                        Your card will be charged <b>{formatNumber(props.total)}</b>.\r\n                    </div>\r\n\r\n                    <div className=\"text-center mt-4\">\r\n                        <bs.Button\r\n                            variant=\"success\"\r\n                            type=\"submit\"\r\n                            className=\"d-inline-flex align-items-center\"\r\n                            disabled={props.form.isSubmitting}\r\n                        >\r\n                            {props.form.isSubmitting &&\r\n                                <bs.Spinner className=\"mr-2\" size=\"sm\" animation=\"border\" />\r\n                            }\r\n                            Purchase\r\n                        </bs.Button>\r\n                    </div>\r\n                </bs.Col>\r\n            </bs.Row>\r\n        </bs.Container>\r\n    </Form>\r\n)\r\n\r\n\r\n/**\r\n * A form input.\r\n *   props.title - the title that shows above the input box\r\n *   props.type - the type of input (see React Bootstrap Form.Control)\r\n *   props.placeholder - placeholder text in the input\r\n */\r\nconst Input = (props) => (\r\n    <Field name={props.name}>{rProps => (\r\n        <bs.Form.Group>\r\n            {props.title &&\r\n                <bs.Form.Label>{props.title}</bs.Form.Label>\r\n            }\r\n            <bs.Form.Control\r\n                type=\"text\"  // ...rProps.field may override this default\r\n                disabled={rProps.form.isSubmitting}\r\n                placeholder={props.placeholder}\r\n                {...rProps.field}\r\n            />\r\n            {rProps.meta.touched && rProps.meta.error &&\r\n                <div className=\"text-danger\">{rProps.meta.error}</div>\r\n            }\r\n        </bs.Form.Group>\r\n    )}</Field>\r\n)\r\n","import React from 'react';\nimport { Row } from 'react-bootstrap';\nimport { Container } from 'react-bootstrap';\nimport { Col } from 'react-bootstrap';\nimport './App.scss';\nimport Top from'./Top'\nimport Left from'./Left'\nimport Right from'./Right'\nimport Bottom from'./Bottom'\nimport Receipt from'./Receipt'\nimport About from'./About'\nimport Home from'./Home'\nimport Help from'./Help'\nimport Details from './Details'\nimport Cart from './Cart'\nimport Checkout from './checkout-starter'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,  \n} from \"react-router-dom\";\n\n\n\n\nfunction App(props) {\n  return (\n    <Router>\n      <Container fluid>\n        <Row>\n          <Col className=\"top-bg\">\n            <Top />\n          </Col>\n        </Row>\n        <Row>\n          <Col className=\"left-bg\">\n            <Left />\n          </Col>\n          <Col xs={8} className=\"center-bg\">\n            <Switch>                          \n              <Route path=\"/about\" component={About} />\n              <Route path=\"/help\" component={Help} />\n              <Route path=\"/product\" component={Details} />                \n              <Route path=\"/cart\" component={Cart} />  \n              <Route path=\"/checkout\" component={Checkout} />\n              <Route path=\"/receipt\" component={Receipt} />\n              <Route path=\"/\" component={Home} />\n            </Switch>\n          </Col>          \n          <Col className=\"right-bg\">\n            <Right />\n          </Col>\n        </Row>\n        <Row className=\"bottom-bg\">\n          <Col>\n            <Bottom />\n          </Col>\n        </Row>\n      </Container>\n    </Router>\n  );\n}\nexport default App","import React from 'react'\r\nimport axios from 'axios'\r\nimport { produce } from 'immer'\r\nimport AppContext from './context'\r\nimport App from './App'\r\n\r\n/** The context provider for our app */\r\nexport default class AppProvider extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.actions = {\r\n            addToCart: this.addToCart,\r\n            removeFromCart: this.removeFromCart,\r\n            clearCart: this.clearCart,\r\n            getCartTotal: this.getCartTotal,\r\n        }\r\n        this.state = {\r\n            categories: {},\r\n            products: {},\r\n            cart: {},\r\n            cartCount: 0,\r\n        }\r\n\r\n    }    \r\n\r\n    addToCart = pid => {\r\n        this.setState(produce(this.state, draft => {\r\n            \r\n            draft.cart[pid] = (draft.cart[pid] || 0) + 1\r\n\r\n            \r\n            let count = 0\r\n            for (const qty of Object.values(draft.cart)) {\r\n                count += qty\r\n            }\r\n            draft.cartCount = count\r\n        }))\r\n    }\r\n\r\n    \r\n    removeFromCart = pid => {\r\n        this.setState(produce(this.state, draft => {\r\n            delete draft.cart[pid]\r\n\r\n            \r\n            let count = 0\r\n            for (const qty of Object.values(draft.cart)) {\r\n                count += qty\r\n            }\r\n            draft.cartCount = count\r\n        }))\r\n    }\r\n\r\n  \r\n    clearCart = () => {\r\n        this.setState(produce(this.state, draft => {\r\n            draft.cart = {}\r\n            draft.cartCount = 0\r\n        }))\r\n    }\r\n\r\n    \r\n    getCartTotal = () => {\r\n        let total = 0.0\r\n        for (const [pid, qty] of Object.entries(this.state.cart)) {\r\n            const product = this.state.products[pid]\r\n            if (product) {\r\n                total += (qty * product.price)\r\n            }\r\n        }\r\n        return total\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <AppContext.Provider value={{...this.state, ...this.actions}}>\r\n                <App />\r\n            </AppContext.Provider>\r\n        )\r\n    }\r\n\r\n    async componentDidMount() {\r\n     \r\n        const cat_resp = await axios.get('http://localhost:8000/api/category')\r\n        const categories = {}\r\n        for (const cat of cat_resp.data) {\r\n            categories[cat.id] = cat\r\n        }\r\n\r\n      \r\n        const prod_resp = await axios.get('http://localhost:8000/api/product')\r\n        const products = {}\r\n        for (const prod of prod_resp.data) {\r\n            products[prod.id] = prod\r\n        }\r\n\r\n        \r\n        this.setState({\r\n            categories: categories,\r\n            products: products,\r\n        })\r\n    }\r\n\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './index.scss';\nimport AppProvider from './context-provider';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(<AppProvider />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}